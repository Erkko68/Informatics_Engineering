ORIGEN 200h
INICIO ini

.DATOS
	;inicialització arrays
	op1 VALOR 0001h,0002h,0003h,0004h,0005h		;OP1 = [1,2,3,4,5]
	op2 VALOR 5 VECES 00005h					;OP2 = [5,5,5,5,5]
	res VALOR 5 VECES 0001h 					;RES = [1,1,1,1,1]
.CODIGO
	ini:
	MOVL R1, BYTEBAJO DIRECCION op1
	MOVH R1, BYTEALTO DIRECCION op1
	
	MOVL R2, BYTEBAJO DIRECCION op2
	MOVH R2, BYTEALTO DIRECCION op2
	
	MOVL R0, BYTEBAJO DIRECCION res
	MOVH R0, BYTEALTO DIRECCION res
	
	MOVL R3, 05h ;En cas que fiquem un valor de menys que la llargada del array el resultat seria 0, i si ens passem sobrescriuriam la següent operacio trancant el programa.
	MOVH R3, 00h
	
	bucle_operacio:
	
		MOV R4, [R1] 	;carregar a R4 operand1[i]
		ADD R4,R4,R4	;operand1[i]·2
		
		MOV R5, [R2]	;carregar a R5 operand2[i]
		ADD R6,R4,R5	;operand1[i]·2 + operand2[i]
		
		ADD R6,R6,R6	;(operand1[i]·2 + operand2[i])·2
		
		MOVL R7, 03H
		MOVH R7, 00h
		
		SUB R6,R6,R7
		
		MOV [R0],R6
		
		;saltar al següent incrementant en "1" la posició de memoria
		INC R1
		INC R2
		INC R0
		
		DEC R3
	BRNZ bucle_operacio
	
	JMP -1
	
FIN
	